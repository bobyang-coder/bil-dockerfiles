# redis集群
# 注：不使用redis.conf文件方式
# 参考链接：https://github.com/Grokzen/docker-redis-cluster
# 手动创建集群：docker run -it --network bob_net-redis-cluster --rm redis redis-cli --cluster create --cluster-replicas 1 redis-node1:6379 redis-node2:6379 redis-node3:6379 redis-node4:6379 redis-node5:6379 redis-node6:6379
# 启动redis-cli：docker run -it --network bob_net-redis-cluster --rm redis redis-cli -h redis-node1 -p 6379
# 启动单点：docker run --name some-redis --network bob_net-redis-cluster -d redis redis-server --appendonly yes
# docker run -v /Users/bianlifeng/Documents/github/bil-dockerfiles/redis/bob/redis_cluster.conf:/usr/local/etc/redis/redis_cluster.conf --name myredis -d  redis redis-server /usr/local/etc/redis/redis_cluster.conf

# TODO :
#  1. 思考怎么将network中的固定ip去掉
#  2. 将配置文件进一步公用化
version: '3'
services: 

  # 节点1
  redis-node1:
    image: redis:5.0.2
    ports: 
      - "7001:6379"
    container_name: redis-node1
    restart: always
    networks: 
      net-redis-cluster:
    # 不引用redis.conf文件
    command: redis-server --cluster-enabled yes --cluster-config-file nodes.conf --cluster-node-timeout 5000 --appendonly yes
  
  # 节点2
  redis-node2:
    image: redis:5.0.2
    ports: 
      - "7002:6379"
    container_name: redis-node2
    restart: always
    networks: 
      net-redis-cluster:
    # 不引用redis.conf文件
    command: redis-server --cluster-enabled yes --cluster-config-file nodes.conf --cluster-node-timeout 5000 --appendonly yes

  # 节点3
  redis-node3:
    image: redis:5.0.2
    ports: 
      - "7003:6379"
    container_name: redis-node3
    restart: always
    networks: 
      net-redis-cluster:
    # 不引用redis.conf文件
    command: redis-server --cluster-enabled yes --cluster-config-file nodes.conf --cluster-node-timeout 5000 --appendonly yes

  # 节点4
  redis-node4:
    image: redis:5.0.2
    ports: 
      - "7004:6379"
    container_name: redis-node4
    restart: always
    networks: 
      net-redis-cluster:
    # 不引用redis.conf文件
    command: redis-server --cluster-enabled yes --cluster-config-file nodes.conf --cluster-node-timeout 5000 --appendonly yes

  # 节点5
  redis-node5:
    image: redis:5.0.2
    ports: 
      - "7005:6379"
    container_name: redis-node5
    restart: always
    networks: 
      net-redis-cluster:
    # 不引用redis.conf文件
    command: redis-server --cluster-enabled yes --cluster-config-file nodes.conf --cluster-node-timeout 5000 --appendonly yes

  # 节点6
  redis-node6:
    image: redis:5.0.2
    ports: 
      - "7006:6379"
    container_name: redis-node6
    restart: always
    networks: 
      net-redis-cluster:
    # 不引用redis.conf文件
    command: redis-server --cluster-enabled yes --cluster-config-file nodes.conf --cluster-node-timeout 5000 --appendonly yes

# 网络
networks: 
  net-redis-cluster:
    driver: bridge
    ipam: 
      driver: default